$[log]
    $[foreach typedef in space.typedefs]

Typedef: ${typedef.name}
    $[/foreach]
    $[foreach enum in space.enums]

Enum: ${enum.name}
    $[/foreach]
    $[foreach entity in space.entities]

        $[let qualifier = entity.isSecondary ? "Secondary ":""]
${qualifier}Entity: ${entity.name}
        $[foreach attribute in entity.attributes]
            $[capture typeLongName]
                $[switch attribute.type]
                    $[case string]
String of characters
                    $[case int32]
32-bit Integer
                    $[case int64]
64-bit Integer
                    $[case double]
64-bit Floating Point
                    $[case float]
32-bit Floating Point
                    $[case uuid]
Unique Identifier - 128 bits
                    $[case typedef]
Typedef named ${attribute.type.name}
                    $[case enum]
Enum named ${attribute.type.name}
                    $[case entity]
Entity named ${attribute.type.name}
                    $[default]
Unknown
                $[/switch]
            $[/capture]
  Attribute
    Name: ${attribute.name}
    Type: ${typeLongName}
        $[/foreach]
    $[/foreach]
$[/log]